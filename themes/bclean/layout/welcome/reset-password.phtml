<div class="wrapper">
    <!-- registration area -->
    <section id="register-form">
        <div class="row m-0">
            <div class="col-lg-4 offset-lg-2 main-register-box">
                <div class="text-center pb-5">
                    <h1 class="login-title text-dark">Rest Password</h1>
                    <p class="p-1 m-0 font-ubuntu text-black-50">This will set your new password</p>
                    
                </div>

                <div class="d-flex justify-content-center">
                    <form method="post" id="reset-form">
                        <div class="alert alert-danger errors" role="alert" style="display: none;"></div>
                        <div class="alert alert-success success" role="alert" style="display: none;"></div>

                        <div class="form-row my-4">
                            <div class="col input-field">
                                <input type="password" required name="password" id="password" class="form-control"
                                    placeholder="New Password*">
                                <?php if ($br['config']['password_complexity_system'] == 1) { ?>
                                <ul class="list-unstyled helper-text">
                                    <li class="length"><?php echo 'least_characters'; ?></li>
                                    <li class="lowercase"><?php echo 'contain_lowercase'; ?></li>
                                    <li class="uppercase"><?php echo 'contain_uppercase'; ?></li>
                                    <li class="special"><?php echo 'number_special'; ?></li>
                                </ul>
                                <?php } ?>
                            </div>
                        </div>

                        <input type="hidden" name="id" value="<?php echo $_GET['code']; ?>">

                        <?php if (!empty($_GET['last_url'])) { ?>
                        <div class="form-group">
                            <input type="hidden" name="last_url"
                                value="<?php echo urldecode(Br_Secure($_GET['last_url'])); ?>">
                        </div>
                        <?php } ?>

                        <div class="submit-btn text-center my-5">
                            <button id="sign_submit" type="submit"
                                class="btn btn-mat sub-btn btn-warning rounded-pill text-dark px-5 add_br_loader">Reset
                                Password</button>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </section>
    <!-- #registration area -->
</div>

<script>
    var working = false;
    var $this = $('#reset-form');
    var $state = $this.find('.errors');
    $(function () {
        $this.ajaxForm({
            url: Br_Ajax_Requests_File() + '?f=reset_password',
            beforeSend: function () {
    	<?php if ($br['config']['password_complexity_system'] == 1) { ?>
    		if ($('.helper-text .length').hasClass('valid') && $('.helper-text .lowercase').hasClass('valid') && $('.helper-text .uppercase').hasClass('valid') && $('.helper-text .special').hasClass('valid')) {
                        working = true;
                        $this.find('button').attr("disabled", true);
                        $this.find('.add_wow_loader').addClass('btn-loading');
                    }
                    else {
                        $state.html('complexity_requirements');
                        return false;
                    }

        <?php } else { ?>
                    working = true;
                    $this.find('button').attr("disabled", true);
                    $this.find('.add_wow_loader').addClass('btn-loading');
        <?php } ?>
		
    },
            success: function (data) {
                if (data.status == 200 || data.status == 600) {
                    $state.addClass('success');
                    $state.html('<?php echo 'welcome_'; ?>');
                    $this.find('.add_wow_loader').removeClass('btn-loading');
                    setTimeout(function () {
                        window.location.href = data.location;
                    }, 1000);
                } else {
                    $this.find('button').attr("disabled", false);
                    $this.find('.add_wow_loader').removeClass('btn-loading');
                    $state.html(data.errors);
                }
                working = false;
            }
        });
    });

<?php if ($br['config']['password_complexity_system'] == 1) { ?>

        (function () {
            var helperText = {
                charLength: document.querySelector('.helper-text .length'),
                lowercase: document.querySelector('.helper-text .lowercase'),
                uppercase: document.querySelector('.helper-text .uppercase'),
                special: document.querySelector('.helper-text .special')
            };
            var password = document.querySelector('#password');



            var pattern = {
                charLength: function () {
                    if (password.value.length >= 6) {
                        return true;
                    }
                },
                lowercase: function () {
                    var regex = /^(?=.*[a-z]).+$/; // Lowercase character pattern

                    if (regex.test(password.value)) {
                        return true;
                    }
                },
                uppercase: function () {
                    var regex = /^(?=.*[A-Z]).+$/; // Uppercase character pattern

                    if (regex.test(password.value)) {
                        return true;
                    }
                },
                special: function () {
                    var regex = /^(?=.*[0-9_\W]).+$/; // Special character or number pattern

                    if (regex.test(password.value)) {
                        return true;
                    }
                }
            };

            // Listen for keyup action on password field
            password.addEventListener('keyup', function () {
                $('.helper-text').slideDown('slow', function () {

                });
                // Check that password is a minimum of 8 characters
                patternTest(pattern.charLength(), helperText.charLength);

                // Check that password contains a lowercase letter		
                patternTest(pattern.lowercase(), helperText.lowercase);

                // Check that password contains an uppercase letter
                patternTest(pattern.uppercase(), helperText.uppercase);

                // Check that password contains a number or special character
                patternTest(pattern.special(), helperText.special);

                // Check that all requirements are fulfilled
                if (hasClass(helperText.charLength, 'valid') &&
                    hasClass(helperText.lowercase, 'valid') &&
                    hasClass(helperText.uppercase, 'valid') &&
                    hasClass(helperText.special, 'valid')
                ) {
                    addClass(password.parentElement, 'valid');
                }
                else {
                    removeClass(password.parentElement, 'valid');
                }
            });

            function patternTest(pattern, response) {
                if (pattern) {
                    addClass(response, 'valid');
                }
                else {
                    removeClass(response, 'valid');
                }
            }

            function addClass(el, className) {
                if (el.classList) {
                    el.classList.add(className);
                }
                else {
                    el.className += ' ' + className;
                }
            }

            function removeClass(el, className) {
                if (el.classList)
                    el.classList.remove(className);
                else
                    el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
            }

            function hasClass(el, className) {
                if (el.classList) {
                    console.log(el.classList);
                    return el.classList.contains(className);
                }
                else {
                    new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);
                }
            }

        })();
<?php } ?>
</script>
<style type="text/css">
    .helper-text {
        display: none;
        margin-top: 6px;
        font-size: 12px;
        line-height: 22px;
        color: #808080;
    }

    li.valid {
        color: #1fd34a;
    }
</style>